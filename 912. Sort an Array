class Solution {

public void Merge(int[]nums,int s,int mid,int e){
    int merged[]=new int[e - s + 1];
    int i=s;
    int j=mid+1;
    int k=0;
    while(i<=mid && j<=e){
        if(nums[i]<=nums[j]){
            merged[k]=nums[i];
            k++;
            i++;
            
        }else{
             merged[k]=nums[j];
             k++;
            j++;
           
        }
    }
    while(i<=mid){
          merged[k]=nums[i];
          k++;
            i++;
           
    }
    while(j<=e){
        merged[k]=nums[j];
        k++;
            j++;
           
    }
    
        for(int g=0,h=s;g< merged.length;g++,h++){
            nums[h]=merged[g];
        }
}
public void MergeSort(int [] nums,int s,int e){
     if (s >= e) {
            return;
        }
    int mid=(s+e)/2;
    MergeSort(nums,s,mid);
    MergeSort(nums,mid+1,e);
    Merge(nums,s,mid,e);
}

    public int[] sortArray(int[] nums) {
        int e=nums.length-1;
        int s=0;
       MergeSort(nums,0,nums.length-1);
        return nums;

    }
}
